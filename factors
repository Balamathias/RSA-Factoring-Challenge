#!/usr/bin/python3

import math
from opcode import opname
import sys
import time


def factorize(num: int | float) -> tuple | None:
    """Factorizes a given number and returns a tuple of the two factors if not prime

    Args:
        num (int | float): The large prime number to be factorized.

    Returns:
        tuple | None: A tuple of the factors are returned when the number is a not prime one else None is returned for prime numbers.

        Example:

        ```py
        print(factorize(500)) -> (2, 250)
        print(factorize(7)) -> None
        ```
    """
    for i in range(2, int((math.pow(num, 0.5) + 1))):
        if (num % i == 0):
            return (i, num // 2)
        else:
            return None

if __name__ == '__main__':
    """Getting the file input"""

    if (len(sys.argv) != 2):
        print("Usage: facors <file>")
        exit()

    input_file = sys.argv[1]
    try:
        with open(input_file, 'r') as file:
            lines = file.readlines()
    
    except FileNotFoundError:
        print("File not found")
        exit()

    start_time = time.time()

    '''loops over each line (which should contain one natural number per line),
        and calls factorize on each number.
        If factorize returns a tuple of factors,
        it prints the factorization in the desired forma
    '''
    for line in lines:
        num = int(line.strip())
        factors = factorize(num)
        if factors:
            print(f"{num}={factors[0]}*{factors[1]}")


        '''If the elapsed time exceeds 5 seconds,
            the program exits with an error message.
        '''
        if time.time() - start_time > 5:
            print("Time limit exceeded")
            exit()
